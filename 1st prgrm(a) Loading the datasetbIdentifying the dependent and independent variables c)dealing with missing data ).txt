from sklearn.linear_model import LinearRegression
from sklearn.metrics import r2_score, mean_squared_error
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
from sklearn.datasets import load_diabetes
from sklearn.model_selection import train_test_split

# Load data
data = load_diabetes()
df = pd.DataFrame(data.data, columns=data.feature_names)
df['target'] = data.target

# Handle missing values (if any)
if df.isnull().values.any():
    df.fillna(df.mean(), inplace=True)   # <-- indented properly

# Select features and target
X = df[['bmi']]
y = df['target']

print(data.feature_names)

# Split dataset
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train model
model = LinearRegression()
model.fit(X_train, y_train)

# Predict
y_pred = model.predict(X_test)

# Evaluate
r2 = r2_score(y_test, y_pred)
mse = mean_squared_error(y_test, y_pred)

print(f"r2 score is {round(r2, 3)}")
print(f"MSE is {round(mse, 3)}")

# Plot
plt.scatter(X_test, y_test, c="blue", label="Actual")
plt.plot(X_test, y_pred, color="green", label="Predicted")
plt.title("Linear Regression for the Diabetes Dataset using BMI value")
plt.xlabel("BMI")
plt.ylabel("Disease Progression")
plt.legend()
plt.show()
